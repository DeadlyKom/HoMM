
                ifndef _ASSETS_MANAGER_RELEASE_
                define _ASSETS_MANAGER_RELEASE_
; -----------------------------------------
; освободить ранее загруженный ресурс
; In:
;   A  - идентификатор ресурса
; Out:
;   HL - адрес загрузки/распаковки
;   IX - адрес структуры FAssets
;   флаг переполнения установлен, если не удалось найти необходимого размера непрерывную область ОЗУ
;   иначе установлена страница загруженого ресурса, рег. пара HL указывает адрес
; Corrupt:
;   HL, E, BC, AF, IX
; Note:
;   - необходимо включить страницу с данными о доступной ОЗУ
; -----------------------------------------
ReleaseAsset:   ; расчёт адреса информации о ресурсе
                LD IXL, A
                LD IXH, HIGH Adr.AssetsTable >> 3
                ADD IX, IX  ; x2
                ADD IX, IX  ; x4
                ADD IX, IX  ; x8

                RES ASSETS_LOAD_BIT, (IX + FAssets.Flags)                       ; сброс флага загрузки ресурса
                SET ASSETS_MARKED_BIT, (IX + FAssets.Address.Page)              ; установка флага невостребованный
; -----------------------------------------
; освободить ранее занятую область данными в доступной ОЗУ
; In:
;   IX - адрес структуры FAssets
; Out:
; Corrupt:
;   HL, E, BC, AF
; Note:
;   - необходимо включить страницу с данными о доступной ОЗУ
; -----------------------------------------
Release:        ; -----------------------------------------
                ; преобразование размера ресурса в блоки по 256 байт
                ; In:
                ;   IX - адрес структуры FAssets
                ; Out:
                ;   A  - количество блоков по 256 байт
                ;   BC - реальный размер блока до 16кб
                ; Corrupt:
                ;   BC, AF
                ; -----------------------------------------
                CALL CalcSizeToBlock
                LD E, A

                ; корректировка количества занимаемых блоков (если адрес не выровнен)
                XOR A
                CP (IX + FAssets.Address.Adr.Low)
                ADC A, E
                LD E, A

                ; -----------------------------------------
                ; преобразование линейного адреса в расположение и номер бита
                ; In:
                ;   IX - адрес структуры FAssets
                ; Out:
                ;   HL - адрес расположения бита линейного адреса
                ;   B  - номер бита линейного адреса (0..7)
                ; Corrupt:
                ;   HL, BC, AF
                ; -----------------------------------------  
                CALL CalcAvailableMem
                INC B
; -----------------------------------------
; освободить ранее занятую область данными в доступной ОЗУ (принудительно)
; In:
;   HL - адрес расположения бита линейного адреса
;   B  - номер бита линейного адреса
;   E  - количество блоков по 256 байт
; Out:
; Corrupt:
;   HL, BC, AF
; Note:
;   необходимо включить страницу с данными о доступной ОЗУ
; -----------------------------------------
.Loop           LD A, B
                DEC A
                ADD A, A    ; x2
                ADD A, A    ; x4
                ADD A, A    ; x8
                OR #86                                                          ; RES n, (HL)
                LD (.BIT), A
.BIT            EQU $+1
                DB #CB, #00

                DEC E
                RET Z                                                           ; выход, если счётчик блоков 256 байт обнулён
                DJNZ .Loop

                LD B, #08
                INC L
                JR .Loop

                endif ; ~ _ASSETS_MANAGER_RELEASE_
