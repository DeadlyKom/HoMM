
                    ifndef _INPUT_KEYBOARD_PRESSED_KEY_STATE_
                    define _INPUT_KEYBOARD_PRESSED_KEY_STATE_
; -----------------------------------------
; получить нажатую Виртуальную Клавишу
; In:
; Out:
;   E  - Виртуальная Клавиша
;   если была нажата клавиша флаг переполнения Carry установлен
; Corrupt:
;   DE, BC, AF, AF'
; Note:
;   SerdjukSVS (C)
; -----------------------------------------
GetPressedKey:  LD DE, #0500
                LD BC, #FEFE
.NextPort       IN A, (C)
                CPL
.NextBit        RRA
                RET C
                INC E
                DEC D
                JR NZ, .NextBit
                RLC B
                RET NC
                LD D, #05
                JR .NextPort

; -----------------------------------------
; получить нажатую Виртуальную Клавишу
; In:
; Out:
;   HL - GameState.Input
;   A' - состояния нажатия symbol (1 бит) и caps shift (0 бит)
;        GameState.Input хранит копию
;   E  - Виртуальная Клавиша
;   если была нажата клавиша флаг переполнения Carry установлен
; Corrupt:
;   HL, DE, BC, AF, AF'
; Note:
;   symbol shift и caps shift не учитываются в опросе
;   но состояния их сохраняются
; -----------------------------------------
GetVirtualKey:  ; инициализация
                LD DE, #0401
                LD BC, #FEFE
                IN A, (C)
                CPL

                ; #FEFE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  V |  C |  X |  Z | CS |
                ;   +----+----+----+----+----+----+----+----+

                LD L, A                                                         ; сохранение сосояние caps shift
                RRA                                                             ; пропуск состояния caps shift

.NextBit_FEFE   RRA
                JR C, .CheckSS
                INC E
                DEC D
                JR NZ, .NextBit_FEFE

                LD H, #06                                                       ; пройти 6 портов

                ; #FDFE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  G |  F |  D |  S |  A |
                ;   +----+----+----+----+----+----+----+----+
                ; #FBFE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  T |  R |  E |  W |  Q |
                ;   +----+----+----+----+----+----+----+----+
                ; #F7FE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  5 |  4 |  3 |  2 |  1 |
                ;   +----+----+----+----+----+----+----+----+
                ; #EFFE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  6 |  7 |  8 |  9 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ; #DFFE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  Y |  U |  I |  O |  P |
                ;   +----+----+----+----+----+----+----+----+
                ; #BFFE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  H |  J |  K |  L | EN |
                ;   +----+----+----+----+----+----+----+----+
.NextPort       LD D, #05
                RLC B                                                           ; следующий порт
                IN A, (C)
                CPL
                

.NextBit        RRA
                JR C, .CheckSS
                INC E
                DEC D
                JR NZ, .NextBit
                DEC H
                JR NZ, .NextPort

.CheckSS        ; #7FFE
                ;   +----+----+----+----+----+----+----+----+
                ;   |  7 |  6 |  5 |  4 |  3 |  2 |  1 |  0 |
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | .. |  B |  N |  M | SS | SP |
                ;   +----+----+----+----+----+----+----+----+
                LD B, #7F
                IN A, (C)
                CPL

                LD H, A                                                         ; сохранение сосояние symbol shift
                JR C, .IsPressed

                ; 0 бит
                RRA
                JR C, .IsPressed
                ; 1 бит
                INC E
                RRA                                                             ; пропуск состояния symbol shift
                ; 2 бит
                INC E
                RRA
                JR C, .IsPressed
                ; 3 бит
                INC E
                RRA
                JR C, .IsPressed
                ; 4 бит
                INC E
                RRA
                JR C, .IsPressed

                LD E, VK_NONE

.IsPressed      EX AF, AF'
                LD A, L
                XOR H
                AND %11111101
                XOR H

                ; сохранение состояния SS и CS во флагах
                INPUT_FLAGS
                XOR (HL)
                AND %00000011
                XOR (HL)
                LD (HL), A
                EX AF, AF'

                RET

; ожидание нажатия клавиши
WaitPressedKey: HALT
                CALL GetPressedKey
                RET C
                JR WaitPressedKey
                
; ожидание отпускание ранее нажатой клавиши
WaitReleasedKey HALT
                CALL GetPressedKey
                RET NC
                JR WaitReleasedKey

; проверка нажатия любой клавиши
; если флаг нуля сброшен, клавиша нажата
AnyKeyPressed:  XOR A
                IN A, (#FE)
                CPL
                AND %00011111
                RET

                endif ; ~_INPUT_KEYBOARD_PRESSED_KEY_STATE_
