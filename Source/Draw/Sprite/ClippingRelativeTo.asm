
                ifndef _DRAW_SPRITE_CLIPPING_RELATIVE_TO_
                define _DRAW_SPRITE_CLIPPING_RELATIVE_TO_
; -----------------------------------------
; отсечение спрайта с последующим отображение
; In:
;   HL - адрес спрайта FSprite
; Out:
; Corrupt:
; Note:
; -----------------------------------------
DrawClipped:    ; чтение размера спрайта
                LD C, (HL)                                                      ; FSpriteInfo.Width
                INC L                                                           ; FSprite выровнен по 8 байт
                LD B, (HL)                                                      ; FSpriteInfo.Height
                INC L                                                           ; FSprite выровнен по 8 байт

                ; чтение смещения по горизонтали
                LD A, (HL)                                                      ; FSpriteInfo.SOx
                INC L                                                           ; FSprite выровнен по 8 байт

                PUSH BC
                EXX
                POP BC

                ; -----------------------------------------
.HorizontClip   ; горизонтальное отсечение (начало)
                ; -----------------------------------------
                ; BC - размер спрайта (B - изначальная высота, С - ширина) в пикселях
                ; A  - смещение по горизонтали
                ; -----------------------------------------

                ; -----------------------------------------
                ; приведение к форме позиции 12.4 (по горизонтали)
                ; -----------------------------------------
                LD L, A
                ADD A, A
                SBC A, A
                LD H, A

                ; SOx <<= 4
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x8
                ADD HL, HL  ; x16

                ; HL = SOx + Position.X
.PositionX      EQU $+1
                LD DE, #0000                                                    ; Position.X (позиция спрайта в мире)
                ADD HL, DE

                ; преобразование позиции спрайта в координаты видимой части тайловой карты
                LD A, (GameSession.WorldInfo + FWorldInfo.MapPosition.X)        ; позиция такйловой карты в знакоместах
                RRA                                                             ; флаг С сброшен
                LD D, A
                LD E, #00
                RR E
                SBC HL, DE
                JP M, .LeftClip                                                 ; переход, если спрайт лежит левее относительно левой грани

                ; -----------------------------------------
.RightClip      ; проверка положения спрайта относительно правой грани
                ; -----------------------------------------
                ; HL - положение спрайта (его левой грани) в пикселя, относительно видимой части тайловой карты
                ; BC - размер спрайта (B - изначальная высота, С - ширина) в пикселях
                ; -----------------------------------------

                ; преобразование позиции спрайта 12.4 к 8-битному (экранное значение)
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x16
                ADD HL, HL  ; x32
                ; H - позиция спрайта по горизонтали в пикселях

                LD A, (GameConfig.VisibleWidth)                                 ; ширина видимой области (SCR_WORLD_SIZE_X << 3) - 1
                SUB H
                RET C                                                           ; выход, если спрайт находится правее относительно правой грани

                ; смещение видимой области
                EX AF, AF'
                LD A, (GameConfig.LeftEdge)
                ADD A, H
                EX AF, AF'

                ; расчёт ширины невидимой части спрайта в пикселях
                NEG                                                             ; отрицательная доступная ширина видимой области
                ADD A, C                                                        ; сумма отрицательной доступной ширины и ширины спрайта в пикселях
                LD L, A
                LD A, #00                                                       ; нулевое смещение в таблице
                JR NC, .HorizontClipped                                         ; переход, если спрайт полностью помещается на экране

                ; дополнение ширины спрайта,
                ; для корректной выборки в таблице по ширене спрайтов
                LD A, C
                NEG
                AND #07
                ADD A, L

                ; округление до знакоместа
                LD L, #00
                RRA                                                             ; флаг С сброшен
                ADC A, L
                RRA
                ADC A, L
                RRA
                ADC A, L

                ; A' - позиция спрайта по горизонтали в пикселях
                ; A  - ширина невидимой части спрайта в знакоместах (+)
                JR .HorizontClipped

.LeftClip       ; -----------------------------------------
                ; спрайта находится левее относительно левой грани
                ; -----------------------------------------
                ; HL - положение спрайта (его левой грани) в пикселя, относительно видимой части тайловой карты
                ; BC - размер спрайта (B - изначальная высота, С - ширина) в пикселях
                ; -----------------------------------------

                ; преобразование ширины спрайта к 16-битному
                LD D, #00
                LD A, C     ; xxxwwwww
                ADD A, A    ; xxwwwww0
                ADD A, A    ; xwwwww00
                ADD A, A    ; wwwww000
                ADD A, A    ; wwww0000 : w
                RL D        ; 0000000w wwww0000
                LD E, A

                ADC HL, DE                                                      ; флаг С сброшен
                RET M                                                           ; выход, если спрайт находится левее относительно левой грани

                ; преобразование позиции спрайта 12.4 к 8-битному (экранное значение)
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x16
                ADD HL, HL  ; x32
                ; H - позиция спрайта по горизонтали в пикселях (правая грань спрайта)

                LD A, H
                OR A
                RET Z                                                           ; выход, если спрайт находится левее относительно левой грани

                ; расчёт ширины невидимой части спрайта в пикселях
                SUB C

                ; округление до знакоместа
                SRA A
                SRA A
                SRA A
                EX AF, AF'

                ; смещение видимой области
                LD A, (GameConfig.LeftEdge)
                EX AF, AF'

                ; A' - позиция спрайта по горизонтали в пикселях
                ; A  - ширина невидимой части спрайта в знакоместах (-)

                ; -----------------------------------------
.HorizontClipped; горизонтальное отсечение (завершение)
                ; -----------------------------------------
                ; A' - позиция спрайта по горизонтали в пикселях
                ; A  - ширина невидимой части спрайта в знакоместах (-/+)
                ; BC - размер спрайта (B - изначальная высота, С - ширина) в пикселях
                ; -----------------------------------------
                EXX

                LD C, A                                                         ; сохранение ширины невидимой части спрайта в знакоместах (-/+)
                EX AF, AF'
                LD E, A                                                         ; сохранение позиции спрайта по горизонтали в пикселях

                ; чтение смещения по вертикали
                LD A, (HL)                                                      ; FSpriteInfo.SOy
                INC L                                                           ; FSprite выровнен по 8 байт

                EXX
                ; -----------------------------------------
.VerticalClip   ; вертекальное отсечение
                ; -----------------------------------------
                ; BC  - размер спрайта (B - изначальная высота, С - ширина) в пикселях
                ; A  - смещение по вертикали
                ; -----------------------------------------

                ; -----------------------------------------
                ; преобразование к форме позиции 12.4 (по вертикали)
                ; -----------------------------------------
                LD L, A
                ADD A, A
                SBC A, A
                LD H, A

                ; SOy <<= 4
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x8
                ADD HL, HL  ; x16

                ; HL = SOy + Position.Y
.PositionY      EQU $+1
                LD DE, #0000                                                    ; Position.Y (позиция спрайта в мире)
                ADD HL, DE

                ; преобразование позиции спрайта в координаты видимой части тайловой карты
                LD A, (GameSession.WorldInfo + FWorldInfo.MapPosition.Y)        ; позиция такйловой карты в знакоместах
                RRA                                                             ; флаг С сброшен
                LD D, A
                LD E, #00
                RR E
                SBC HL, DE
                JP M, .TopClip                                                  ; переход, если спрайт лежит выше относительно верхней грани

                ; -----------------------------------------
.BottomClip     ; проверка положения спрайта относительно нижней грани
                ; -----------------------------------------
                ; HL - положение спрайта (его верхней грани) в пикселя, относительно видимой части тайловой карты
                ; BC - размер спрайта (B - изначальная высота, С - ширина) в пикселях
                ; -----------------------------------------

                ; преобразование позиции спрайта 12.4 к 8-битному (экранное значение)
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x16
                ADD HL, HL  ; x32
                ; H - позиция спрайта по вертикали в пикселях (верхняя грань спрайта)

                LD A, (GameConfig.VisibleHeight)                                ; высота видимой области (SCR_WORLD_SIZE_Y << 3) - 1
                SUB H
                RET C                                                           ; выход, если спрайт находится ниже относительно нижней грани

                ; смещение видимой области
                EX AF, AF'
                LD A, (GameConfig.TopEdge)
                ADD A, H
                EX AF, AF'
                
                LD L, #00                                                       ; высота невидимой части спрайта в пикселях

                ; расчёт высоты невидимой части спрайта в пикселях
                SUB B
                JR NC, .VerticalClipped                                         ; переход, если спрайт полностью помещается на экране

                ; корректировка высоты спрайта
                ADD A, B
                LD B, A

                ; A' - позиция спрайта по вертикали в пикселях
                ; B  - новая высота видимой части спрайта в пикселях (+)
                ; L  - высота невидимой части спрайта в пикселях
                JR .VerticalClipped

                ; -----------------------------------------
.TopClip        ; спрайта находится выше относительно верхней грани
                ; -----------------------------------------
                ; HL - положение спрайта (его верхней грани) в пикселя, относительно видимой части тайловой карты
                ; BC - размер спрайта (B - изначальная высота, С - ширина) в пикселях
                ; -----------------------------------------

                ; преобразование высоты спрайта к 16-битному
                LD D, #00
                LD A, B     ; xxxwwwww
                ADD A, A    ; xxwwwww0
                ADD A, A    ; xwwwww00
                ADD A, A    ; wwwww000
                ADD A, A    ; wwww0000 : w
                RL D        ; 0000000w wwww0000
                LD E, A

                ADC HL, DE                                                      ; флаг С сброшен
                RET M                                                           ; выход, если спрайт находится выше относительно верхней грани

                ; преобразование позиции спрайта 12.4 к 8-битному (экранное значение)
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x16
                ADD HL, HL  ; x32
                ; H - позиция спрайта по вертикали в пикселях (нижняя грань спрайта)

                LD A, H
                OR A
                RET Z                                                           ; выход, если спрайт находится выше относительно верхней грани

                ; расчёт высоты невидимой части спрайта в пикселях
                SUB B
                LD L, A
                ADD A, B
                LD B, A

                ; смещение видимой области
                LD A, (GameConfig.TopEdge)
                EX AF, AF'

                ; A' - позиция спрайта по вертикали в пикселях
                ; B  - новая высота спрайта видимой части спрайта в пикселях
                ; L  - высота невидимой части спрайта в пикселях

                ; -----------------------------------------
.VerticalClipped; вертикальное отсечение (завершение)
                ; -----------------------------------------
                ; A' - позиция спрайта по вертикали в пикселях
                ; B  - новая высота спрайта видимой/невидимой части спрайта в пикселях (-/+)
                ; C  - ширина спрайта в пикселях
                ; L  - высота невидимой части спрайта в пикселях
                ; C' - ширина невидимой части спрайта в знакоместах (-/+)
                ; E  - позиции спрайта по горизонтали в пикселях
                ; -----------------------------------------

                EXX

                ; защитная от порчи данных с разрешённым прерыванием
                RESTORE_BC
                LD (.ContainerSP), SP
                PUSH DE                                                         ; сохранение E - позиции спрайта по горизонтали в пикселях

                ; -----------------------------------------
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | D1 | D0 | MR | P4 | P3 | P2 | P1 | P0 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   D1,D0   [7,6]       - тип вывода спрайта
                ;                           00 - LD
                ;                           01 - OR & XOR
                ;                           10 - LD с атрибутами
                ;                           11 - OR & XOR с атрибутами
                ;   MR      [5]         - флаг, зеркального отображения спрайта по горизонтали
                ;   P4-P0   [4..0]      - страница хранения спрайта (32 страницы)
                ; -----------------------------------------
                LD A, (HL)                                                      ; FSpriteData.Page
                PUSH AF
                LD (.Flags), A
                INC L                                                           ; FSprite выровнен по 8 байт
                AND %00011111
                PUSH BC
                CALL SetPage                                                    ; установка страницы спрайта
                POP BC

                ; чтение адреса спрайта
                LD A, (HL)                                                      ; FSpriteData.Adr
                INC L                                                           ; FSprite выровнен по 8 байт
                LD H, (HL)                                                      ; FSpriteData.Adr
                LD L, A
                PUSH HL

                ; рассчёт адреса экранной области
                LD H, HIGH Adr.ScrAdrTable
                EX AF, AF'
                LD L, A                                                         ; позиции спрайта по вертикали в пикселях
                LD A, (HL)
                INC H
                LD D, (HL)
                ; корректировка адреса по горизонтали
                INC H
                LD L, E
                OR (HL)
                LD E, A

                EXX
                POP DE

                ; округление до знакоместах
                LD A, C                                                         ; ширины спрайта в пикселях
                LD C, #00
                RRA                                                             ; флаг С сброшен
                ADC A, C
                RRA
                ADC A, C
                RRA
                ADC A, C
                LD C, A
                EX AF, AF'                                                      ; сохранение ширины спрайта в знакоместах

                ; расчёт смещения от начала адреса спрайта
                LD A, L     ; %000rrrrr
                DEC A       ; началос с 1
                ADD A, A    ; %00rrrrr0
                ADD A, A    ; %0rrrrr00
.Flags          EQU $+1
                LD H, #00
                DEC C       ; началос с 1
                OR C        ; %0rrrrrww
                RLA         ; %rrrrrwwx
                RL H        ; %rrrrrwwx : a
                RRA         ; %arrrrrww
                LD C, H     ; %dxxxxxxx                                         ; значение LD/OR & XOR

                LD H, A
                LD A, L
                OR A
                LD L, H
                LD H, HIGH Adr.MultiplySprite
                JR Z, .ToCopy
                
                ; -----------------------------------------
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | AR | R4 | R3 | R2 | R1 | R0 | W1 | W0 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   AR      [7]         - флаг, учитывать атрибуты, биты R2..R0 не имеют значения
                ;   R4-R0   [6..2]      - количество строк              (макс 32 строки)
                ;   W1,W0   [1,0]       - ширина спрайта в знакоместах  (1-4 байта)
                ;
                ;   размер таблицы 256 байт
                ; -----------------------------------------
                LD A, (HL)
                BIT 7, C                                                        ; слаг Z сброшен - LD, иначе OR & XOR
                JR Z, $+3
                ADD A, A                                                        ; ширина спрайта с маской (x2)

                ; приращение смещение к адресу спрайта
                ADD A, E
                LD E, A
                ADC A, D
                SUB E
                LD D, A

.ToCopy         ; расчёт количество копируемых байт во временный буфер
                LD A, B     ; %000rrrrr                                         ; новая высота спрайта видимой части спрайта в пикселях
                DEC A       ; началос с 1
                ADD A, A    ; %00rrrrr0
                ADD A, A    ; %0rrrrr00
                XOR L
                AND %01111100
                XOR L       ; %arrrrrww                                         ; rrrrr - новая высота видимой части спрайта

                ; -----------------------------------------
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | AR | R4 | R3 | R2 | R1 | R0 | W1 | W0 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   AR      [7]         - флаг, учитывать атрибуты, биты R2..R0 не имеют значения
                ;   R4-R0   [6..2]      - количество строк              (макс 32 строки)
                ;   W1,W0   [1,0]       - ширина спрайта в знакоместах  (1-4 байта)
                ;
                ;   размер таблицы 256 байт
                ; -----------------------------------------
                LD L, A
                LD A, (HL)
                BIT 7, C                                                        ; слаг Z сброшен - LD, иначе OR & XOR
                JR Z, $+3
                ADD A, A                                                        ; ширина спрайта с маской (x2)

                ; -----------------------------------------
                ; копирование спрайта в общий буфер
                ; In:
                ;   DE - адрес спрайта
                ;   A  - количество копируемых байт
                ; Out:
                ;   HL  - адрес спрайта
                ; Corrupt:
                ;   HL, DE, BC, AF
                ; Note:
                ;   максимальный размер спрайта 256 байт
                ; -----------------------------------------
                CALL Memcpy.Sprite
                LD (.SpriteAddress), HL
                SET_PAGE_HIDDEN_SCREEN                                          ; установка страницы скрытого экран

                EX AF, AF'                                                      ; восстановлени ширины спрайта в знакоместах
                ADD A, A    ; %00000ww0
                LD C, A
                ; -----------------------------------------
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | D1 | D0 | MR | P4 | P3 | P2 | P1 | P0 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   D1,D0   [7,6]       - тип вывода спрайта
                ;                           00 - LD
                ;                           01 - OR & XOR
                ;                           10 - LD с атрибутами
                ;                           11 - OR & XOR с атрибутами
                ;   MR      [5]         - флаг, зеркального отображения спрайта по горизонтали
                ;   P4-P0   [4..0]      - страница хранения спрайта (32 страницы)
                ; -----------------------------------------
                POP DE  ; %ddmppppp
                EXX
                LD A, C                                                         ; ширина невидимой части спрайта в знакоместах (-/+)
                EX AF, AF'                                                      ; сохранение ширины невидимой части спрайта в знакоместах (-/+)
                INC H
                LD A, (HL)                                                      ; вкл бит отображаемого пикселя
                EXX
                RLA     ; %xxxxxxxx : ? (если нет смещения 7 бит включён)
                LD A, D ; %ddmppppp
                RRA     ; %Sddmpppp : p
                RRA     ; %xSddmppp : p
                XOR C
                AND %01111000
                XOR C   ; %0Sddmww0

                ; добавить смещение к таблице
                ADD A, LOW (FuncTable - 2)
                LD L, A
                ADC A, HIGH (FuncTable - 2)
                SUB L
                LD H, A

                ; чтение адреса таблицы переходов
                LD A, (HL)
                INC HL
                LD H, (HL)
                LD L, A

                ; приведение к 16-битному значению
                EX AF, AF'                                                      ; восстановление ширины невидимой части спрайта в знакоместах (-/+)
                ADD A, A    ; x2
                ADD A, A    ; x4
                LD E, A
                SBC A, A
                LD D, A
                ADD HL, DE                                                      ; смещение по таблице

                ; чтение адреса функции отображения
                LD A, (HL)
                LD IXL, A
                INC HL
                LD A, (HL)
                LD IXH, A
                INC HL

                ; чтение адреса функции отображения следующей строки
                LD A, (HL)
                LD IYL, A
                INC HL
                LD A, (HL)
                LD IYH, A

                POP DE
                LD A, E                                                         ; восстановление E - позиции спрайта по горизонтали в пикселях
                LD H, HIGH Adr.ByteMirrorTable
                ADD A, A    ; x2
                AND %00001110
                ADD A, (HIGH Adr.ShiftTable) - 1                                ; таблица не хранит нулевое смещение
                LD D, A
                EXX

                ; подготовка вывода
                LD L, E
                LD A, #F8
                AND D
                LD H, A
                SUB D
                ADD A, #08
                LD C, B                                                         ; количество оставшихся строк рисования
                LD B, A                                                         ; количество оставшихся строк в знакоместе
.SpriteAddress  EQU $+1
                LD SP, #0000
                JP (IX)                                                         ; отобращение спрайта

.ContainerSP    EQU $+1
                LD SP, #0000
                RET

                ; HL  - адрес экрана (начало строки)
                ; DE  - адрес экрана (текущий)
                ; B   - количество оставшихся строк в знакоместе
                ; C   - количество оставшихся строк рисования
                ; H'  - старший адрес таблицы зеркальных байт
                ; D'  - старший адрес таблицы сдвига
                ; BC' - 2 батйа спрайта (значение маски и спрайта)
                ; SP  - адрес спрайта
                ;
                ; форма хранения спрайта:
                ;   первый байт всегда отзеркален, что позволяет исключить два раза зеркалить и маску и спрайт
FuncTable:      ; таблица функций со сдвигом (горизонталь, ширина спрайта в знакоместах)
.LD             DW #0000, #0000, #0000, #0000       ; +
.M_LD           DW #0000, #0000, #0000, #0000       ; -
.OR_XOR         DW #0000, #0000, #0000, #0000       ; +
.M_OR_XOR       DW #0000, #0000, #0000, #0000       ; +
.LD_ATTR        DW #0000, #0000, #0000, #0000       ; +
.M_LD_ATTR      DW #0000, #0000, #0000, #0000       ; -
.OR_XOR_ATTR    DW #0000, #0000, #0000, #0000       ; +
.M_OR_XOR_ATTR  DW #0000, #0000, #0000, #0000       ; -
                ; таблица функций без сдвига (горизонталь, ширина спрайта в знакоместах)
.LD_            DW #0000, #0000, #0000, #0000       ; +
.M_LD_          DW #0000, #0000, #0000, #0000       ; -
.OR_XOR_        DW #AA55, #0000, #0000, #0000       ; +
.M_OR_XOR_      DW #0000, #0000, #0000, #0000       ; +
.LD_ATTR_       DW #0000, #0000, #0000, #0000       ; +
.M_LD_ATTR_     DW #0000, #0000, #0000, #0000       ; -
.OR_XOR_ATTR_   DW #0000, #0000, #0000, #0000       ; +
.M_OR_XOR_ATTR_ DW #0000, #0000, #0000, #0000       ; -

                endif ; ~ _DRAW_SPRITE_CLIPPING_RELATIVE_TO_
