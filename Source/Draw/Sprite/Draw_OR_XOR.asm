
                ifndef _DRAW_SPRITE_DRAW_OR_XOR_
                define _DRAW_SPRITE_DRAW_OR_XOR_
; -----------------------------------------
; отображение спрайта OR & XOR
; In:
; Out:
; Corrupt:
; Note:
; -----------------------------------------
DrawOR_XOR      
                ; сохранение в буфер адрес экарана
                LD HL, Adr.ExtraBuffer
                LD (HL), E
                INC L
                LD (HL), D
                INC L

                EXX
                POP DE                                                          ; восстановление адреса спрайта

                ; округление до знакоместах
                LD A, C                                                         ; ширины спрайта в пикселях
                LD C, #00
                OR A
                RRA                                                             ; флаг С сброшен
                ADC A, C
                RRA
                ADC A, C
                RRA
                ADC A, C
                LD C, A

                EXX
                LD (HL), A                                                      ; сохранение ширины спрайта в знакоместах
                INC L
                EXX
                EX AF, AF'                                                      ; сохранение ширины спрайта в знакоместах

                ; расчёт смещения от начала адреса спрайта
                LD A, L     ; %000rrrrr
                DEC A       ; началос с 1
                ADD A, A    ; %00rrrrr0
                ADD A, A    ; %0rrrrr00
.Flags          EQU $+1
                LD H, #00   ; %ddmppppp                                         ; FSpriteData.Page
                DEC C       ; началос с 1
                OR C        ; %0rrrrrww
                LD C, H     ; %ddmppppp                                         ; значение LD/OR & XOR
                RLA         ; %rrrrrwwx
                RL H        ; %rrrrrwwx : a                                     ; a - флаг атрибута
                RRA         ; %arrrrrww
                LD H, A     ; %arrrrrww

                ; определение необходимости обрезать спрайт сверху
                LD A, L
                OR A
                LD L, H     ; %arrrrrww
                LD H, HIGH Adr.MultiplySprite
                JR Z, .ToCopy
                
                ; определение спрайта с маской
                LD A, C     ; %ddmppppp
                AND %11100000
                CP LD_ATTR

                ; -----------------------------------------
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | AR | R4 | R3 | R2 | R1 | R0 | W1 | W0 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   AR      [7]         - флаг, учитывать атрибуты, биты R2..R0 не имеют значения
                ;   R4-R0   [6..2]      - количество строк              (макс 32 строки)
                ;   W1,W0   [1,0]       - ширина спрайта в знакоместах  (1-4 байта)
                ;
                ;   размер таблицы 256 байт
                ; -----------------------------------------
                LD A, (HL)
                JR Z, $+3
                ADD A, A                                                        ; ширина спрайта с маской (x2)

                ; приращение смещение к адресу спрайта
                ADD A, E
                LD E, A
                ADC A, D
                SUB E
                LD D, A

.ToCopy         ; расчёт количество копируемых байт во временный буфер
                LD A, B     ; %000rrrrr                                         ; новая высота видимой части спрайта в пикселях

                EXX
                LD (HL), A                                                      ; сохранение новой высота видимой части спрайта в пикселях
                DEC L
                EXX

                DEC A       ; началос с 1
                ADD A, A    ; %00rrrrr0
                ADD A, A    ; %0rrrrr00
                XOR L
                AND %01111100
                XOR L       ; %arrrrrww                                         ; rrrrr - новая высота видимой части спрайта
                LD L, A

                ; определение спрайта с маской
                LD A, C     ; %ddmppppp
                AND %11100000
                CP LD_ATTR

                ; -----------------------------------------
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | AR | R4 | R3 | R2 | R1 | R0 | W1 | W0 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   AR      [7]         - флаг, учитывать атрибуты, биты R2..R0 не имеют значения
                ;   R4-R0   [6..2]      - количество строк              (макс 32 строки)
                ;   W1,W0   [1,0]       - ширина спрайта в знакоместах  (1-4 байта)
                ;
                ;   размер таблицы 256 байт
                ; -----------------------------------------
                LD A, (HL)
                JR Z, $+3
                ADD A, A                                                        ; ширина спрайта с маской (x2)

                ; -----------------------------------------
                ; копирование спрайта в общий буфер
                ; In:
                ;   DE - адрес спрайта
                ;   A  - количество копируемых байт
                ; Out:
                ;   HL  - адрес спрайта
                ; Corrupt:
                ;   HL, DE, BC, AF
                ; Note:
                ;   максимальный размер спрайта 256 байт
                ; -----------------------------------------
                CALL Memcpy.Sprite
                LD (.SpriteAddress), HL
                SET_PAGE_SCREEN_SHADOW                                          ; включение страницы теневого экрана

                EX AF, AF'                                                      ; восстановлени ширины спрайта в знакоместах
                ADD A, A    ; %00000ww0
                LD C, A
                
                EXX
                LD A, C                                                         ; ширина невидимой части спрайта в знакоместах (-/+)
                OR A
                JP P, .IsPosition                                               ; переход, еслм C хранит позицию спрайта по горизонтали в пикселях

                ; округление до знакоместа (отрицательное число)
                SRA A
                SRA A
                SRA A
                JR .SaveInvisible

.PosX           EQU $+1
.IsPosition     LD C, #00

                ; округление до знакоместа (положительное число)
                RRA                                                             ; флаг С сброшен
                ADC A, #00
                RRA
                ADC A, #00
                RRA
                ADC A, #00
.SaveInvisible  EX AF, AF'                                                      ; сохранение ширины невидимой части спрайта в знакоместах (-/+)

                LD A, C
                EXX

                ; -----------------------------------------
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | D1 | D0 | MR | P4 | P3 | P2 | P1 | P0 |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   D1,D0   [7,6]       - тип вывода спрайта
                ;                           00 - OR & XOR с сохранением фона
                ;                           01 - OR & XOR
                ;                           10 - LD с атрибутами
                ;                           11 - OR & XOR с атрибутами
                ;   MR      [5]         - флаг, зеркального отображения спрайта по горизонтали
                ;   P4-P0   [4..0]      - страница хранения спрайта (32 страницы)
                ; -----------------------------------------
                POP DE  ; %ddmppppp
                AND #07
                ADD A, #FF
                LD A, D ; %ddmppppp
                RRA     ; %Sddmpppp : p
                RRA     ; %xSddmppp : p
                XOR C
                AND %01111000
                XOR C   ; %0Sddmww0
                LD C, D ; %ddmppppp

                ; добавить смещение к таблице
                ADD A, LOW (Function.Table - 2)
                LD L, A
                ADC A, HIGH (Function.Table - 2)
                SUB L
                LD H, A

                ; чтение адреса таблицы переходов
                LD A, (HL)
                INC HL
                LD H, (HL)
                LD L, A

                ; приведение к 16-битному значению
                EX AF, AF'                                                      ; восстановление ширины невидимой части спрайта в знакоместах (-/+)
                LD E, A

                ; корректировка ширины спрайта 
                EXX
                OR A
                JP M, .SetWidth
                NEG
.SetWidth       ADD A, (HL)
                LD (HL), A                                                      ; сохранение ширины видимой части спрайта в знакоместах
                EXX

                LD A, E
                ADD A, A    ; x2
                ADD A, A    ; x4
                LD E, A
                SBC A, A
                LD D, A
                ADD HL, DE                                                      ; смещение по таблице

                ; чтение адреса функции отображения
                LD A, (HL)
                LD IXL, A
                INC HL
                LD A, (HL)
                LD IXH, A
                INC HL

                ; чтение адреса функции отображения следующей строки
                LD A, (HL)
                LD IYL, A
                INC HL
                LD A, (HL)
                LD IYH, A

                ; определение смешения
                EXX
                LD A, C                                                         ; хранит при левом клипе -отрицательное смещение, в остальных позиции спрайта по горизонтали в пикселях
                AND %00000111
                JR Z, $+3
                INC (HL)
                EXX

                ; -----------------------------------------
                ; тип вывода спрайта
                ;  %ddm ppppp
                ; + 000 - OR & XOR с сохранением фона
                ;           H'  - старший байт адреса таблицы сдвига
                ;           DE' - адрес буфера
                ; - 001 - OR & XOR с сохранением фона, отражённый спрайт по горизонтали
                ; + 010 - OR & XOR
                ;           H'  - старший адрес таблицы зеркальных байт
                ;           D'  - старший адрес таблицы сдвига
                ; + 011 - OR & XOR, отражённый спрайт по горизонтали
                ;           H'  - старший адрес таблицы зеркальных байт
                ;           D'  - старший адрес таблицы сдвига
                ; + 100 - LD с атрибутами
                ;           H'  - старший байт таблицы преобразования адреса экрана в атрибутный
                ; - 101 - LD с атрибутами, отражённый спрайт по горизонтали
                ; + 110 - OR & XOR с атрибутами
                ;           H'  - старший байт таблицы преобразования адреса экрана в атрибутный
                ; - 111 - OR & XOR с атрибутами, отражённый спрайт по горизонтали
                ; -----------------------------------------
                
                BIT 7, C
                JR Z, .NotAttribute                                             ; переход, если вывод спрайта без атрибутов
                ; отображение спрайта с атрибутами
                EXX
                PUSH DE
                LD C, B                                                         ; количество оставшихся строк рисования
                SRL C
                SRL C
                SRL C

                EXX
                POP DE

                ; преобразование адрес экрана в атрибутный
                LD L, D
                LD H, HIGH Adr.ScrAttrAdrTable
                LD D, (HL)
                LD L, E
                EXX

                JR .Charboundary

.NotAttribute   ADD A, A    ; x2
                ADD A, (HIGH Adr.ShiftTable) - 2                                ; таблица не хранит нулевое смещение
                LD D, A

                ; определение адреса таблицы зеркальных байт/буфера
                BIT 6, C
                LD H, HIGH Adr.ByteMirrorTable
                JR NZ, $+6                                                      ; переход, если тип вывода спрайта безсохранения фона
                LD HL, Adr.ExtraBuffer + 4
                EX DE, HL                                                       ; HL - указывает на таблицу сдвига, DE - указывает на буфер
                
                EXX

                ; подготовка вывода
                LD C, B                                                         ; количество оставшихся строк рисования
.Charboundary   ; для измененввфыия высоты с пикселей на знакоместа
                LD L, E
                LD A, #F8
                AND D
                LD H, A
                SUB D
                ADD A, #08
                LD B, A                                                         ; количество оставшихся строк в знакоместе
.SpriteAddress  EQU $+1
                LD SP, #0000
                JP (IX)                                                         ; отобращение спрайта
                
                endif ; ~ _DRAW_SPRITE_DRAW_OR_XOR_
