
                ifndef _HERO_PATH_REIFICATION_HERO_PATH_
                define _HERO_PATH_REIFICATION_HERO_PATH_
; -----------------------------------------
; овеществление путь героя
; In:
;   DE - стартовая позиция в тайлах (D - y, E - x)
;   B  - длина пути
; Out:
; Corrupt:
; Note:
; -----------------------------------------
ReificationPath:; расчёт адреса хранения позиции
                ; +2 добавлен для цикла
                LD A, B
                ADD A, A    ; x2
                ADD A, LOW (Adr.HeroPath + 2)
                LD L, A
                ADC A, HIGH (Adr.HeroPath + 2)
                SUB L
                LD H, A

                INC B                                                           ; увеличение пути, для добавления последнего UI объекта

.Loop           ; --------------------------------------------------------------
                ; чтение позиции элемента пути
                PUSH HL
                ; -----------------------------------------
                ; определение направления
                ; In:
                ;   HL - адрес хранения позиции
                ;   DE - начальная позиция в тайлах (D - y, E - x)
                ; Out:
                ;   HL - адрес хранения значения направления
                ;   DE - прочитаная позиция в тайлах (D - y, E - x)
                ; Corrupt:
                ;   HL, DE, C, AF
                ; -----------------------------------------
                CALL Hero.DirectonPath
                LD A, (HL)
                EX AF, AF'                                                      ; сохранение направления

                POP HL
                PUSH HL
                PUSH DE                                                         ; сохранение позиции UI объекта

                ; проверка конца пути
                DEC L
                DEC L
                JR NZ, .IsPath                                                  ; перход, если путь

                LD HL, .EndPointTable
                JR .Spawn

.IsPath         ; -----------------------------------------
                ; определение направления
                ; In:
                ;   HL - адрес хранения позиции
                ;   DE - начальная позиция в тайлах (D - y, E - x)
                ; Out:
                ;   HL - адрес хранения значения направления
                ;   DE - прочитаная позиция в тайлах (D - y, E - x)
                ; Corrupt:
                ;   HL, DE, C, AF
                ; -----------------------------------------
                CALL Hero.DirectonPath
                
                EX AF, AF'                                                      ; восстановление направления
                LD E, A
                
                ; расчёт смещения смещения 1, 0, -1
                SUB (HL)

                ; проверка пограничных значений 0 -> 7
                CP -7
                JR NZ, $+4
                LD A, 1

                ; проверка пограничных значений 7 -> 0
                CP 7
                JR NZ, $+4
                LD A, -1

                LD L, A

                LD A, E
                ADD A, A    ; x2
                ADD A, E    ; x3
                INC A       ; +1
                ADD A, L    ; +(-1/0/1)

                ; расчёт адреса хранения индекса спрайта
                ADD A, LOW .Table
                LD L, A
                ADC A, HIGH .Table
                SUB L
                LD H, A

                POP DE
                PUSH DE

.Spawn          ; --------------------------------------------------------------
                ; спавн UI объекта
                EXX
                LD B, ODS_ID_UI_ARROWPATH
                POP DE                                                          ; восстановление позиции UI объекта
                SLA D
                SLA E
                ; -----------------------------------------
                ; спавн объекта
                ; In:
                ;   B  - тип объекта (настройки по умолчанию)
                ;   DE - положение объекта в знакоместах (D - y, E - x)
                ; Out:
                ;   A' - идентификатор объекта
                ;   IX - адрес структуры FObjectDefaultSettings
                ;   IY - адрес структуры FObject
                ;   флаг переполнения Carry установлен, если нет свободного места в массиве
                ; Corrupt:
                ;   HL, DE, BC, AF, AF'
                ; Note:
                ; -----------------------------------------
                CALL Object.Spawn
                EXX

                ; чтение индекса спрайта стрелки пути
                LD A, (HL)
                ADD A, A    ; << 1

                ; следующая позиция пути
                POP HL
                DEC L
                DEC L

                RET C                                                           ; выход, если была ошибка
                ; -----------------------------------------
                ; Note:
                ;   для ассета ASSETS_ID_UI_ARROW_PATH_PACK,
                ;   поле FObjectUI.Super.Sprite имеет слудующие значения:
                ;
                ;      7    6    5    4    3    2    1    0
                ;   +----+----+----+----+----+----+----+----+
                ;   | .. | .. | A4 | A3 | A2 | A1 | A0 | PI |
                ;   +----+----+----+----+----+----+----+----+
                ;
                ;   A4-A0   [5..1]  - индекс спрайта стрелки
                ;   PI      [0]     - флаг типа спрайта
                ;                       0 - проходимый
                ;                       1 - непроходимый
                ; -----------------------------------------
                LD (IY + FObjectUI.Super.Sprite), A
                ; --------------------------------------------------------------
                DJNZ .Loop

                RET

.Table          ; таблица индексов спрайтов стрелок пути
                ;  -1 | 0 | 1
                DB 19,  3, 16                                                   ; 0
                DB 13, 10,  1                                                   ; 1
                DB 20,  4,  2                                                   ; 2
                DB 21, 17,  7                                                   ; 3
                DB 23, 11,  8                                                   ; 4
                DB 22,  5, 14                                                   ; 5
                DB 24,  6, 15                                                   ; 6
                DB 18, 12,  9                                                   ; 7
.EndPointTable  DB 0

                endif ; ~_HERO_PATH_REIFICATION_HERO_PATH_
