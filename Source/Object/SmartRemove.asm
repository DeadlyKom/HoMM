
                ifndef _OBJECT_SMART_REMOVE_
                define _OBJECT_SMART_REMOVE_
; -----------------------------------------
; умное удаление объекта
; In:
;   IY - адрес удаляемого объекта FObject
; Out:
; Corrupt:
; Note:
; -----------------------------------------
SmartRemove:    ; --------------------------------------------------------------
                ; преобразование адреса объекта к индексу
                PUSH IY
                POP HL
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x8
                ADD HL, HL  ; x16
                LD D, H                                                         ; индекс объекта
                
                ; количество элементов в массиве
                LD A, (GameSession.WorldInfo + FWorldInfo.ObjectNum)
                LD E, A

                LD A, (IY + FObject.Chunk)
                LD HL, Adr.ChunkArrayCounters
                ; -----------------------------------------
                ; удаление значения из массива чанков
                ; In:
                ;   A  - порядковый номер чанка
                ;   HL - адрес счётчиков массива чанков (выровненый 256 байт)
                ;   D  - удаляемое значение
                ;   E  - количество элементов в массиве
                ; Out:
                ; Corrupt:
                ;   HL, DE, BC, AF
                ; Note:
                ; -----------------------------------------
                CALL ChunkArray.Remove
                ; --------------------------------------------------------------
                ; ToDo добавить перемещение объектов по их типам:
                ;      - герой
                ; --------------------------------------------------------------
                CALL RemoveAtSwap
                RET C                                                           ; выход, если удалён последний элемент в массиве

                ; преобразование адреса объекта к индексу (старый индекс, для поиска) 
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x8
                ADD HL, HL  ; x16

                EX DE, HL

                ; преобразование адреса объекта к индексу (новый индекс после перемещения) 
                ADD HL, HL  ; x2
                ADD HL, HL  ; x4
                ADD HL, HL  ; x8
                ADD HL, HL  ; x16
                LD E, H

                ; D - старый индекс, E - новый индекс после перемещения

                ; -----------------------------------------
                ; получение адреса указаннго чанка
                ; In:
                ;   A  - порядковый номер чанка
                ;   HL - адрес счётчиков массива чанков (выровненый 256 байт)
                ; Out:
                ;   HL - начальный адрес счётчиков в указанном чанке
                ;   A  - количествой пройденых элементов/начальный адрес расположения элементов
                ; Corrupt:
                ;   L, BC, AF
                ; Note:
                ; -----------------------------------------
                LD A, (IY + FObject.Chunk)
                LD HL, Adr.ChunkArrayCounters
                CALL ChunkArray.GetAddress

                LD C, (HL)
                LD B, #00
                INC H                                                           ; переход на массив значений
                LD L, A

                ; поиск удаляемого значения
                LD A, D
                CPIR
                DEBUG_BREAK_POINT_NZ                                            ; произошла ошибка!
                DEC L

                LD (HL), E                                                      ; обновление индекса
                ; --------------------------------------------------------------
                RET

                display " - Smart object removal:\t\t\t\t", /A, SmartRemove, "\t= busy [ ", /D, $-SmartRemove, " byte(s)  ]"

                endif ; ~_OBJECT_SMART_REMOVE_
